syntax = "proto3";

package chat;

option go_package = "voo.su/api/grpc/pb/chat;pb";

import "common/common.proto";

service ChatService {
  // Retrieves real-time updates for the chat, such as new messages or chat events
  rpc GetUpdates(UpdatesRequest) returns (stream Update);

  // Creates a new chat with the specified participants
  rpc CreateChat(CreateChatRequest) returns (CreateChatResponse);

  // Retrieves the list of chats for the user
  rpc GetChats(GetChatsRequest) returns (GetChatsResponse);

  // Deletes the specified chat
  rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse);

  // Retrieves the message history for a specific chat
  rpc GetHistory(GetHistoryRequest) returns (GetHistoryResponse);

  // Sends a text message to the specified receiver
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);

  // Sends a media file to the specified receiver
  rpc SendMedia(SendMediaRequest) returns (SendMediaResponse);

  // Marks the specified messages as viewed by the receiver
  rpc ViewMessages(ViewMessagesRequest) returns (ViewMessagesResponse);

  // Deletes specific messages from the chat (optional: revoke them)
  rpc DeleteMessages(DeleteMessagesRequest) returns (DeleteMessagesResponse);

  rpc SetTyping(SetTypingRequest) returns (SetTypingResponse);

  rpc UploadSticker(UploadStickerRequest) returns (UploadStickerResponse);

  rpc GetStickers(GetStickersRequest) returns (GetStickersResponse);

  rpc DeleteSticker(DeleteStickerRequest) returns (DeleteStickerResponse);

  rpc GetSystemStickers(GetSystemStickersRequest) returns (GetSystemStickersResponse);

  rpc SetSystemSticker(SetSystemStickerRequest) returns (SetSystemStickerResponse);

  rpc ChatTop(ChatTopRequest) returns (ChatTopResponse);

  rpc VoteMessageHandle(VoteMessageHandleRequest) returns (VoteMessageHandleResponse);

  rpc CollectMessage(CollectMessageRequest) returns (CollectMessageResponse);

  rpc CreateFolder(CreateFolderRequest) returns (CreateFolderResponse);

  rpc GetFolders(GetFoldersRequest) returns (GetFoldersResponse);

  rpc ChangeFolder(ChangeFolderRequest) returns (ChangeFolderResponse);

  rpc UpdateFolder(UpdateFolderRequest) returns (UpdateFolderResponse);

  rpc DeleteFolder(DeleteFolderRequest) returns (DeleteFolderResponse);

  rpc SortFolder(SortFolderRequest) returns (SortFolderResponse);

  rpc SaveFolder(SaveFolderRequest) returns (SaveFolderResponse);
}

message Receiver {
  int32 chat_type = 1;
  int64 receiver_id = 2;
}

message UpdatesRequest {}

message Update {
  oneof update {
    UpdateNewMessage new_message = 1;
    UpdateChatReadInbox chat_read_inbox = 2;
    UpdateUserTyping user_typing = 3;
    UpdateDeleteMessages delete_messages = 4;
    UpdateUserStatus user_status = 5;
  }
}

message UpdateNewMessage {
  MessageItem message = 1;
}

message UpdateChatReadInbox {
  Receiver receiver = 1;
  string last_read_inbox_message_id = 2;
  int64 unread_count = 3;
}

message UpdateUserTyping {
  Receiver receiver = 1;
  int64 user_id = 2;
  bool is_typing = 3;
}

message UpdateDeleteMessages {
  Receiver receiver = 1;
  repeated string message_ids = 2;
}

message UpdateUserStatus {
  int64 user_id = 1;
  bool status = 2;
}

message GetChatsRequest {}

message GetChatsResponse {
  repeated Chat items = 1;
}

message CreateChatRequest {
  Receiver receiver = 1;
}

message CreateChatResponse {
  Chat item = 1;
}

message DeleteChatRequest {
  int64 id = 1;
}

message DeleteChatResponse {
  bool success = 1;
}

message Chat {
  int64 id = 1;
  Receiver receiver = 2;
  string title = 3;
  common.ChatPhoto photo = 4;
  string msg_text = 5;
  common.EntityNotifySettings notify_settings = 6;
  int64 unread_count = 7;
  string updated_at = 8;
  bool is_online = 9;
  bool is_bot = 10;
}

message GetHistoryRequest {
  Receiver receiver = 1;
  int64 message_id = 2;
  int64 limit = 3;
}

message GetHistoryResponse {
  int64 limit = 1;
  int64 message_id = 2;
  repeated MessageItem items = 3;
}

message MessageItem {
  oneof message_type {
    Message message = 1;
    MessageService message_service = 2;
    MessageEmpty message_empty = 3;
  }
}

message Message {
  int64 id = 1;
  int64 sender_id = 2;
  Receiver receiver = 3;
  string content = 4;
  MessageMedia media = 5;
  MessageReply reply = 6;
  bool is_read = 7;
  string created_at = 8;
}

message MessageService {
  int64 id = 1;
  int64 sender_id = 2;
  Receiver receiver = 3;
  MessageServiceAction action = 4;
  string created_at = 5;
}

message MessageServiceAction {
  oneof message_action_type {
    MessageActionEmpty message_action_empty = 1;
    MessageActionLogin message_action_login = 2;
    MessageActionGroupCreate message_action_group_create = 3;
    MessageActionGroupUserInvite message_action_group_user_invite = 4;
    MessageActionGroupUserLeave message_action_group_user_leave = 5;
    MessageActionGroupUserRemove message_action_group_user_remove = 6;
    MessageActionGroupRenameChange message_action_group_rename_change = 7;
    MessageActionGroupDeletion message_action_group_deletion = 8;
    MessageActionGroupAds message_action_group_ads = 9;
  }
}

message MessageActionEmpty {}

message MessageActionLogin {
  string ip = 1;
  string agent = 2;
  string address = 3;
  string created_at = 4;
}

message MessageActionGroupCreate {
  string title = 1;
  common.User owner = 2;
}

message MessageActionGroupUserInvite {
  common.User owner = 1;
  common.User member = 2;
}

message MessageActionGroupUserLeave {
  common.User owner = 1;
}

message MessageActionGroupUserRemove {
  common.User owner = 1;
  common.User member = 2;
}

message MessageActionGroupRenameChange {
  common.User owner = 1;
}

message MessageActionGroupDeletion {
  common.User owner = 1;
  common.User member = 2;
}

message MessageActionGroupAds {
  common.User owner = 1;
}

message MessageEmpty {
  int64 id = 1;
  Receiver receiver = 2;
}

message MessageMedia {
  oneof media {
    MessageMediaPhoto message_media_photo = 1;
    MessageMediaDocument message_media_document = 2;
    MessageMediaGeo message_media_geo = 3;
  }
}

message MessageMediaPhoto {
  string id = 1;
}

message MessageMediaDocument {
  string id = 1;
  string mime_type = 2;
  int32 size = 3;  // File size in bytes
  repeated common.PhotoSize thumbs = 4;
  repeated common.VideoSize video_thumbs = 5;
  common.DocumentAttribute attribute = 6;
}

message MessageMediaGeo {
  string id = 1;
  string longitude = 2;
  string latitude = 3;
}

message MessageReply {
  int64 id = 1;
  Receiver receiver = 2;
  string content = 3;
  MessageMedia media = 4;
  string created_at = 5;
}

message SendMessageRequest {
  Receiver receiver = 1;
  string message = 2;
  int64 reply_to_msg_id = 3;
}

message SendMessageResponse {
  bool success = 1;
}

message InputMediaUploadedPhoto {
  common.InputFile file = 1;
}

message InputMediaUploadedDocument {
  common.InputFile file = 1;
  string mime_type = 2;
  common.DocumentAttribute attributes = 3;
  common.InputFile thumb = 4;
}

message InputMediaVote {
  string type = 1;
  string title = 2;
  int32 mode = 3;
  int32 anonymous = 4;
  repeated string options = 5;
}

message InputMediaGeoPoint {
  string type = 1;
  string longitude = 2;
  string latitude = 3;
  string description = 4;
}

message InputMediaCode {
  string type = 1;
  string lang = 2;
  string code = 3;
}

message InputMedia {
  oneof media {
    InputMediaUploadedPhoto photo = 1;
    InputMediaUploadedDocument document = 2;
    InputMediaVote vote = 3;
    InputMediaGeoPoint geo = 4;
    InputMediaCode code = 5;
  }
}

message SendMediaRequest {
  Receiver receiver = 1;
  InputMedia media = 2;
  string message = 3;
  int64 reply_to_msg_id = 4;
}

message SendMediaResponse {
  bool success = 1;
}

message ViewMessagesRequest {
  Receiver receiver = 1;
  repeated int64 message_ids = 2;
}

message ViewMessagesResponse {
  Receiver receiver = 1;
  int64 last_read_inbox_message_id = 2;
  int64 unread_count = 3;
}

message SetTypingRequest {
  Receiver receiver = 1;
}

message SetTypingResponse {
  bool success = 1;
}

message DeleteMessagesRequest {
  Receiver receiver = 1;
  repeated int64 message_ids = 2;
  bool revoke = 3;
}

message DeleteMessagesResponse {
  bool success = 1;
}

message StickerListItem {
  int64 media_id = 1;
  string src = 2;
}

message UploadStickerRequest {}

message UploadStickerResponse {
  int64 media_id = 1;
  string src = 2;
}

message GetStickersRequest {}

message GetStickersResponse {
  message SysSticker {
    int64 sticker_id = 1;
    string url = 2;
    string name = 3;
    repeated StickerListItem list = 4;
  }

  repeated SysSticker sys_sticker = 1;
  repeated StickerListItem collect_sticker = 2;
}

message DeleteStickerRequest {
  string ids = 1;
}

message DeleteStickerResponse {
  bool success = 1;
}

message GetSystemStickersRequest {
  int64 sticker_id = 1;
  int32 type = 2;
}

message GetSystemStickersResponse {
  message Item {
    int64 id = 1;
    string name = 2;
    string icon = 3;
    int32 status = 4;
  }

  repeated Item items = 1;
}

message SetSystemStickerRequest {
  int64 sticker_id = 1;
  int32 type = 2;
}

message SetSystemStickerResponse {
  int64 sticker_id = 1;
  string url = 2;
  string name = 3;
  repeated StickerListItem list = 4;
}

message ChatTopRequest {
  int64 list_id = 1;
  int32 type = 2;
}

message ChatTopResponse {}

message ForwardMessageRequest {
  Receiver receiver = 1;
  string type = 2;
  int32 mode = 3;
  repeated int64 message_ids = 4;
  repeated int64 gids = 5;
  repeated int64 uids = 6;
}

message KeyboardMessage {
  message Data {
    int64 sender_id = 1;
    Receiver receiver = 2;
  }

  string event = 1;
  Data data = 3;
}

message CollectMessageRequest {
  int64 message_id = 1;
}

message CollectMessageResponse {}

message CreateFolderRequest {
  string name = 1;
  int64 sort = 2;
}

message CreateFolderResponse{
  int64 id = 1;
}

message GetFoldersRequest {}

message GetFoldersResponse {
  message Item {
    int64 id = 1;
    string name = 2;
    int32 count = 3;
    int32 sort = 4;
  }

  repeated Item items = 1;
}

message ChangeFolderRequest {
  int64 user_id = 1;
  int32 folder_id = 2;
}

message ChangeFolderResponse {}

message UpdateFolderRequest {
  int64 id = 1;
  string name = 2;
  int32 sort = 3;
}

message UpdateFolderResponse {
  int64 id = 1;
}

message DeleteFolderRequest {
  int64 id = 1;
}

message DeleteFolderResponse {}

message SortFolderRequest {
  int64 id = 1;
}

message SortFolderResponse {
  message Item {
    int64 id = 1;
    int32 sort = 2;
  }

  repeated Item items = 1;
}

message FolderSortResponse {}

message SaveFolderRequest {
  message Item {
    int64 id = 1;
    int32 sort = 2;
    string name = 3;
  }

  repeated Item items = 1;
}

message SaveFolderResponse {}

message VoteMessageHandleRequest {
  int64 message_id = 1;
  string options = 2;
}

message VoteMessageHandleResponse {}

message StickerMessageRequest {
  string type = 1;
  int64 sticker_id = 2;
  Receiver receiver = 3;
}
