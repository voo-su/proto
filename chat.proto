syntax = "proto3";

package chat;

option go_package = "voo.su/api/grpc/pb/chat;pb";

import "common/common.proto";

service ChatService {
  // Retrieves real-time updates for the chat, such as new messages or chat events
  rpc GetUpdates(UpdatesRequest) returns (stream Update);

  // Retrieves the list of chats for the user
  rpc GetChats(GetChatsRequest) returns (GetChatsResponse) {}

  // Retrieves the message history for a specific chat
  rpc GetHistory(GetHistoryRequest) returns (GetHistoryResponse) {}

  // Sends a text message to the specified receiver
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}

  // Sends a photo to the specified receiver
  rpc SendPhoto(SendPhotoRequest) returns (SendPhotoResponse) {}

  // Marks the specified messages as viewed by the receiver
  rpc ViewMessages(ViewMessagesRequest) returns (ViewMessagesResponse) {}

  // Deletes specific messages from the chat (optional: revoke them)
  rpc DeleteMessages(DeleteMessagesRequest) returns (DeleteMessagesResponse);
}

message Receiver {
  int32 chat_type = 1;
  int64 receiver_id = 2;
}

message UpdatesRequest {}

message Update {
  oneof update {
    UpdateNewMessage new_message = 1;
    UpdateChatReadInbox chat_read_inbox = 2;
    UpdateUserTyping user_typing = 3;
    UpdateDeleteMessages delete_messages = 4;
  }
}

message UpdateNewMessage {
  MessageItem message = 1;
}

message UpdateChatReadInbox {
  Receiver receiver = 1;
  string last_read_inbox_message_id = 2;
  int64 unread_count = 3;
}

message UpdateUserTyping {
  Receiver receiver = 1;
  int64 user_id = 2;
  bool is_typing = 3;
}

message UpdateDeleteMessages {
  Receiver receiver = 1;
  repeated string message_ids = 2;
}

message GetChatsRequest {}

message GetChatsResponse {
  repeated ChatItem items = 1;
}

message ChatItem {
  int64 id = 1;
  Receiver receiver = 2;
  string username = 3;
  string avatar = 4;
  string name = 5;
  string surname = 6;
  string msg_text = 7;
  common.EntityNotifySettings notify_settings = 8;
  int64 unread_count = 9;
  string updated_at = 10;
  bool is_online = 11;
  bool is_disturb = 12;
  bool is_bot = 13;
}

message GetHistoryRequest {
  Receiver receiver = 1;
  int64 message_id = 2;
  int64 limit = 3;
}

message GetHistoryResponse {
  int64 limit = 1;
  int64 message_id = 2;
  repeated MessageItem items = 3;
}

message MessageItem {
  int64 id = 1;
  Receiver receiver = 2;
  /*
    Regular Messages (msg_type):
      1  - Text message
      2  - Code snippet
      3  - Image
      4  - Audio message
      5  - Video message
      6  - File
      7  - Location
      8  - Card
      9  - Forwarded message
      10 - Login / Authentication
      11 - Voting
      12 - Mixed content

    System Events (msg_type):
      1000 - System message
      1101 - Group created
      1102 - New member joined the group
      1103 - Member left the group
      1104 - Member was removed from the group
      1105 - Message deleted in the group
      1106 - Group deleted
      1107 - Group switched to "admins only" mode
      1108 - "Admins only" mode disabled
      1109 - Member muted in the group
      1110 - Member unmuted in the group
      1111 - Advertisement in the group
      1113 - Group ownership transferred
  */
  int32 msg_type = 3;
  int64 user_id = 4;
  string content = 5;
  MessageMedia media = 6;
  MessageReply reply = 7;
  bool is_read = 8;
  string created_at = 9;
}

message MessageMedia {
  oneof media {
    MessageMediaPhoto message_media_photo = 1;
    MessageMediaDocument message_media_document = 2;
  }
}

message MessageMediaPhoto {
  string file = 1;
}

message MessageMediaDocument {
  string file = 1;
  string mime_type = 2;
}

message MessageReply {
  int64 id = 1;
  int32 msg_type = 2;
  int64 user_id = 3;
  string username = 4;
  string content = 5;
}

message SendMessageRequest {
  Receiver receiver = 1;
  string message = 2;
  int64 reply_to_msg_id = 3;
}

message SendMessageResponse {
  bool success = 1;
}

message SendPhotoRequest {
  Receiver receiver = 1;
  bytes photo = 2;
  optional string caption = 3;
}

message SendPhotoResponse {
  bool success = 1;
}

message ViewMessagesRequest {
  Receiver receiver = 1;
  repeated int64 message_ids = 2;
}

message ViewMessagesResponse {
  Receiver receiver = 1;
  int64 last_read_inbox_message_id = 2;
  int64 unread_count = 3;
}

message DeleteMessagesRequest {
  Receiver receiver = 1;
  repeated int64 message_ids = 2;
  bool revoke = 3;
}

message DeleteMessagesResponse {
  bool success = 1;
}
