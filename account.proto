syntax = "proto3";

package account;

option go_package = "voo.su/api/grpc/pb/account;pb";

import "common/common.proto";

service AccountService {
  // Updates the profile details of the user
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);

  // Updates the profile photo of the user
  rpc UpdateProfilePhoto(UpdateProfilePhotoRequest) returns (UpdateProfilePhotoResponse);

  // Retrieves the notification settings for a specific entity (chat or group)
  rpc GetNotifySettings(GetNotifySettingsRequest) returns (GetNotifySettingsResponse);

  // Updates the notification settings for a specific entity (chat or group)
  rpc UpdateNotifySettings(UpdateNotifySettingsRequest) returns (UpdateNotifySettingsResponse);

  // Registers a device to receive notifications
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse);

  // Updates the username of the user
  rpc UpdateUsername(UpdateUsernameRequest) returns (UpdateUsernameResponse);

  // Retrieves real-time updates for the chat, such as new messages or chat events
  rpc GetUpdates(stream UpdateRequest) returns (stream UpdateResponse);

  rpc GetEmail(GetEmailRequest) returns (GetEmailResponse);
}

message UpdateProfileRequest {
  string name = 1;
  string surname = 2;
  int32 gender = 3;
  string birthday = 4;
  string about = 5;
}

message UpdateProfileResponse {
  bool success = 1;
}

message UpdateProfilePhotoRequest {
  common.InputPhoto photo = 1;
}

message UpdateProfilePhotoResponse {
  bool success = 1;
}

message NotifyEntity {
  oneof entity {
    common.EntityChats chats = 2;
    common.EntityGroups groups = 1;
    common.EntityChat chat = 4;
    common.EntityGroup group = 5;
  }
}

message GetNotifySettingsRequest {
  NotifyEntity entity = 1;
}

message GetNotifySettingsResponse {
  common.EntityNotifySettings settings = 1;
}

message UpdateNotifySettingsRequest {
  NotifyEntity entity = 1;
  common.EntityNotifySettings settings = 2;
}

message UpdateNotifySettingsResponse {
  bool success = 1;
}

message RegisterDeviceRequest {
  int32 token_type = 1;
  string token = 2;
}

message RegisterDeviceResponse {
  bool success = 1;
}

message UpdateUsernameRequest {
  string username = 1;
}

message UpdateUsernameResponse {
  bool success = 1;
}

message UpdateRequest {
  oneof update {
    UpdateSystemPingEvent system_ping_event = 1;
    UpdateSystemPongEvent system_pong_event = 2;
  }
}

message UpdateResponse {
  oneof update {
    UpdateNewMessage new_message = 1;
    UpdateChatReadInbox chat_read_inbox = 2;
    UpdateUserTyping user_typing = 3;
    UpdateDeleteMessages delete_messages = 4;
    UpdateUserStatus user_status = 5;
    UpdateSystemPingIntervalEvent system_ping_interval_event = 6;
    UpdateSystemPingEvent system_ping_event = 7;
    UpdateSystemPongEvent system_pong_event = 8;
    UpdateSystemAckEvent system_ack_event = 9;
    UpdateSystemEvent system_event = 10;
  }
}

message UpdateSystemPingIntervalEvent {
  string ping_interval = 1;
  string ping_timeout = 2;
}

message UpdateSystemPingEvent {}

message UpdateSystemPongEvent {}

message UpdateSystemAckEvent {
  string sid = 1;
}

message UpdateSystemEvent {
  string event = 1;
  string sid = 2;
  bool is_ack = 3;
  int32 retry = 4;
}

message UpdateNewMessage {
  common.MessageItem message = 1;
}

message UpdateChatReadInbox {
  common.Receiver receiver = 1;
  string last_read_inbox_message_id = 2;
  int64 unread_count = 3;
}

message UpdateUserTyping {
  common.Receiver receiver = 1;
  int64 user_id = 2;
  bool is_typing = 3;
}

message UpdateDeleteMessages {
  common.Receiver receiver = 1;
  repeated string message_ids = 2;
}

message UpdateUserStatus {
  int64 user_id = 1;
  bool status = 2;
}

message GetEmailRequest {}

message GetEmailResponse {
  string email = 1;
}
