syntax = "proto3";

package message;

option go_package = "./message;pb";

service MessageService {
    rpc GetHistory(GetHistoryRequest) returns (GetHistoryResponse) {}

    rpc Send(SendMessageRequest) returns (SendMessageResponse) {}

    rpc ViewMessages(ViewMessagesRequest) returns (ViewMessagesResponse) {}

    rpc GetUpdates (UpdatesRequest) returns (stream Update);
}

message GetHistoryRequest {
    int64 chat_type = 1;
    int64 receiver_id = 2;
    int64 record_id = 3;
    int64 limit = 4;
}

message GetHistoryResponse {
    int64 limit = 1;
    int64 record_id = 2;
    repeated MessageItem items = 3;
}

message MessageItem {
    string id = 1;
    int32 chat_type = 2;
    int32 msg_type = 3;
    int64 receiver_id = 4;
    int64 user_id = 5;
    string content = 6;
    bool is_read = 7;
    string created_at = 8;
}

message SendMessageRequest {
    int64 chat_type = 1;
    int64 receiver_id = 2;
    string message = 3;
}

message SendMessageResponse {
    string id = 1;
}

message ViewMessagesRequest {
    int64 chat_type = 1;
    int64 receiver_id = 2;
    repeated string message_ids = 3;
}

message ViewMessagesResponse {
    int64 chat_type = 1;
    int64 receiver_id = 2;
    string last_read_inbox_message_id = 3;
    int32 unread_count = 4;
}

message UpdatesRequest {}

message Update {
    oneof update {
        UpdateNewMessage new_message = 1;
        UpdateChatReadInbox chat_read_inbox = 2;
    }
}

message UpdateNewMessage {
    MessageItem message = 1;
}

message UpdateChatReadInbox {
    int64 chat_type = 1;
    int64 receiver_id = 2;
    string last_read_inbox_message_id = 3;
    int32 unread_count = 4;
}
